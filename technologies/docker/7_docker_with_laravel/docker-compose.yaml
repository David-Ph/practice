version: "3.8"
services:
  server:
    image: "nginx:stable-alpine"
    ports:
      - "8000:80"
    volumes:
      - ./src:/var/www/html
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - php
      - mysql
  php:
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
    volumes:
      - ./src:/var/www/html:delegated # delegated is an option to slightly increase performance, basically means if there's any changes from the container, it will not instantly reflect the changes in the host code.
  mysql:
    image: mysql:5.7
    env_file:
      - ./env/mysql.env
  composer: # run this utility container first with docker-compose run --rm composer create-project --prefer-dist laravel/laravel .
    build:
      context: ./dockerfiles
      dockerfile: composer.dockerfile
    volumes:
      - ./src:/var/www/html
  artisan:
    build:
      context: ./dockerfiles
      dockerfile: php.dockerfile
    volumes:
      - ./src:/var/www/html
    entrypoint: ["php", "/var/www/html/artisan"]
  npm:
    image: node:14-alpine
    working_dir: /var/www/html
    entrypoint: ["npm"]
    volumes:
      - ./src:/var/www/html
# run with docker-compose up -d --build server
# to run artisan you can do docker-compose run --rm artisan migrate
